@model IEnumerable<MusicCollector.Models.Album>

<script>
    $(function () {
        $(".anchorSetAlbum").click(function () {
            //debugger;
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');

            $.ajax({
                //type: "GET",
                //url: AlbumListPostBackURL,
                type: "POST",
                url: '@Url.Action("GetAlbumInfo", "Albums")',
                contentType: "application/json; charset=utf-8",
                data: "{'id' : '" + id + "'}",//{ "query": id },
                datatype: "json",
                success: function (data) {
                    //debugger;
                    //$('#myModalContent').html(data);
                    //$('#myModal').modal(options);
                    //$('#myModal').modal('show');

                    $('#AlbumNo').val(data.AlbumID);
                    $('#AlbumDescriptionTxt').html(data.AlbumDesc)
                    $('#myModal').modal('hide');
                },
                error: function () {
                    alert("Nie udało się pobrać albumu.");
                }
            });
        });
    });
</script>

@{ 
    int _startIndex = 0;
    var startIndexTmp = ViewBag.StartIndex;
    if (startIndexTmp != null)
    {
        _startIndex = Convert.ToInt32(startIndexTmp);
    }
}

<div class="modal-header">
    <button type="button" class="closebtn" data-dismiss="modal" aria-hidden="true">×</button>
    <h4 class="modal-title" id="myModalLabel">Lista albumów</h4>
</div>

@using (Html.BeginForm("Index", "Albums", FormMethod.Post))
{
    <p>
        Szukaj: <input id="searchString" name="searchString" type="text" /> <input type="submit" value="Szukaj" />
    </p>
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Duration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YearOfProduction)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Author)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DurationStr)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.YearOfProduction)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EntryNo }) |
            @Html.ActionLink("Details", "Details", new { id=item.EntryNo }) |
            @*@Html.ActionLink("Delete", "Delete", new { id=item.EntryNo })*@
            @*<a href="@Url.Action("SetAlbum","CollectionEntries",new { id=item.EntryNo });" 
               onclick="SetName();">Select</a>*@
            <a href="javascript:void(0);" class="anchorSetAlbum" data-id="@item.EntryNo">Wybierz</a>
        </td>
    </tr>
}


</table>


@Html.ActionLink("następna strona", "AlbumModal", new
{
    query = "test",
    startIndex = _startIndex + 2,
    pageSize = 2
})
