@*@model IEnumerable<MusicCollector.Models.Album>*@
@model PagedList.IPagedList<MusicCollector.Models.Album>  
@using PagedList.Mvc;

<script>
    $(function () {
        $(".anchorSetAlbum").click(function () {
            //debugger;
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');

            $.ajax({
                //type: "GET",
                //url: AlbumListPostBackURL,
                type: "POST",
                url: '@Url.Action("GetAlbumInfo", "Albums")',
                contentType: "application/json; charset=utf-8",
                data: "{'id' : '" + id + "'}",//{ "query": id },
                datatype: "json",
                success: function (data) {
                    //debugger;
                    //$('#myModalContent').html(data);
                    //$('#myModal').modal(options);
                    //$('#myModal').modal('show');

                    $('#AlbumNo').val(data.AlbumID);
                    $('#AlbumDescriptionTxt').html(data.AlbumDesc)
                    $('#myModal').modal('hide');
                },
                error: function () {
                    alert("Nie udało się pobrać albumu.");
                }
            });
        });
    });
</script>

@{ 
    int _startIndex = 0;
    int _pageSize = 2;
    string _searchString = "";

    var startIndexTmp = ViewBag.StartIndex;
    if (startIndexTmp != null)
    {
        _startIndex = Convert.ToInt32(startIndexTmp);
    }

    var pageSizeTmp = ViewBag.PageSize;
    if (pageSizeTmp != null)
    {
        _pageSize = Convert.ToInt32(pageSizeTmp);
    }

    if (ViewBag.SearchString != null)
    {
        _searchString = Convert.ToString(ViewBag.SearchString);
    }
}

<div class="modal-header">
    <button type="button" class="closebtn" data-dismiss="modal" aria-hidden="true">×</button>
    <h4 class="modal-title" id="myModalLabel">Lista albumów</h4>
</div>

@using (Html.BeginForm("AlbumModal", "Albums", FormMethod.Post))
{
    <p>
        <input type="hidden" id="startIndex" name="startIndex" value="0" />
        <input type="hidden" id="pageSize" name="pageSize" value="@_pageSize" />
        Szukaj: <input id="searchString" name="searchString" type="text" value="@_searchString" /> <input type="submit" value="Szukaj" />
    </p>
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    @*<tr>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Duration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YearOfProduction)
        </th>
        <th></th>
    </tr>*@

    <tr>
        <th>
            Autor
        </th>
        <th>
            Tytuł
        </th>
        <th>
            Czas trwania
        </th>
        <th>
            Rok produkcji
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Author)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DurationStr)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.YearOfProduction)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EntryNo }) |
            @Html.ActionLink("Details", "Details", new { id=item.EntryNo }) |
            @*@Html.ActionLink("Delete", "Delete", new { id=item.EntryNo })*@
            @*<a href="@Url.Action("SetAlbum","CollectionEntries",new { id=item.EntryNo });" 
               onclick="SetName();">Select</a>*@
            <a href="javascript:void(0);" class="anchorSetAlbum" data-id="@item.EntryNo">Wybierz</a>
        </td>
    </tr>
}


</table>


@if (Model.TotalItemCount > _pageSize)
{
    <div class="pagingBox">
        <input id="HiddenPageSize" name="PageSize" type="hidden" />
        <input id="HiddenPage" name="Page" type="hidden" />
        <span class="selectBoxes display_none_mobile">
            @Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "2", 2 }, { "3", 3 }, { "4", 4 }, { "6", 6 } },
                     "Key", "Value", Convert.ToString(ViewBag.PageSize)), new { id = "pagesizelist" })
        </span>
        <div class="pagerecord display_none_mobile">
            Records
           
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount 
        </div>

        @Html.PagedListPager(Model, page => Url.Action("AlbumModal", "Albums",
                                       new
                                       {
                                           searchString = _searchString,
                                           startIndex = (page - 1) * ViewBag.PageSize,//_startIndex,
                                           pageSize = ViewBag.PageSize
                                       }),
                                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                                    {
                                        Display = PagedListDisplayMode.IfNeeded,
                                        MaximumPageNumbersToDisplay = 5
                                    },
                                    new AjaxOptions
                                    {
                                        InsertionMode = InsertionMode.Replace,
                                        HttpMethod = "Get",
                                        UpdateTargetId = "myModalContent"
                                    }))
    </div>
}

@*@Html.ActionLink("następna strona", "AlbumModal", new
{
    searchString = "test",
    startIndex = _startIndex + 2,
    pageSize = 2
})*@

@Html.ActionLink("poprzednia strona", "AlbumModal", new
{
    searchString = _searchString,
    startIndex = _startIndex - _pageSize,
    pageSize = _pageSize
})
||
@Html.ActionLink("następna strona", "AlbumModal", new
{
    searchString = _searchString,
    startIndex = _startIndex + _pageSize,
    pageSize = _pageSize
})
