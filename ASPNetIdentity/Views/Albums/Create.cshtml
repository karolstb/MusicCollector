<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/Additionals/jquery-ui-1.10.0.custom.min.css" rel="stylesheet" />
<link href="~/Content/Additionals/jquery.ui.timepicker.css?v=0.3.3" rel="stylesheet" />
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
@*<script src="~/Scripts/Additionals/jquery-1.9.0.min.js"></script>*@
<script src="~/Scripts/Additionals/jquery.ui.core.min.js"></script>
<script src="~/Scripts/Additionals/jquery.ui.widget.min.js"></script>
<script src="~/Scripts/Additionals/jquery.ui.tabs.min.js"></script>
<script src="~/Scripts/Additionals/jquery.ui.position.min.js"></script>

<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

<script src="~/Scripts/Additionals/jquery.ui.timepicker.js?v=0.3.3"></script>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>

<script type="text/javascript">
    //$(function () {
    //    //$('.durationpicker').datepicker();
    //    $('.durationpicker').tim.timepicker();
    //})
    $(document).ready(function () {
        //@ViewBag.MyVariable = 1;
        //$('#timepicker\\.\\[1\\]').timepicker({
        //    showAnim: 'blind'
        //});
        //$('.timepicker').timepicker({
        //    showAnim: 'blind'
        //});

        $("#Title").on("change", function ()
        {
            alert("change");
            LoadCoverImage(1)
        });

        $("#LoadNextImageBtn").on("click", function () {
            //var orderStr = '@ViewBag.OrderNo'; //@Html.Raw(Json.Encode(ViewBag.OrderNo));
            var orderStr = $('#ImageSearchOrderHidden').val();
            var orderNo = parseInt(orderStr);
            LoadCoverImage(orderNo++)
            $('#ImageSearchOrderHidden').val(orderNo);
        });
    });

    function LoadCoverImage(order) {
        //var serviceURL = '/AjaxTest/FirstAjax';
        var authorTxt = $('#Author');
        var titleTxt = $("#Title");
        //var orderHidden = $("#ImageSearchOrderHidden");
        alert(authorTxt.val() + " - " + titleTxt.val() + " - " + order);
        $.ajax({
            type: "POST",
            url: '@Url.Action("SearchForCoverImage", "Albums")',//serviceURL,
            data: "{'author' : '" + titleTxt.val() + "', 'title' : '" + authorTxt.val() + "', 'order' : '"+order+"'}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: successFunc,
            error: errorFunc
        });


        function successFunc(data, status) {
            if (data.ImageBase64 == "")
                return;

            var coverArtImg = $('#CoverArtImg');
            //alert('sukces ' + coverArtImg);
            //alert('sukces ' + data.ImageBase64);
            //coverArtImg.src = "data:image/gif;base64," + data.ImageBase64;
            coverArtImg.attr("src", "data:image/gif;base64," + data.ImageBase64);
            //releases.empty();
            //$.each(data, function (index, item) { // item is now an object containing properties ID and Text
            //    releases.append($('<option></option>').text(item.Text).val(item.ID));
            //});
        }

        function errorFunc() {
            alert('nie udało się pobrać obazka');
        }
    }
</script>

@model MusicCollector.Models.Album

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Album</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.Duration.Minutes,  htmlAttributes: new {  @class = "control-label col-md-2" })
            <div class="col-md-10"  style="width:100px;">
                @Html.EditorFor(model => model.Duration.Minutes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration.Minutes, "", new { @class = "text-danger" })
            </div>
           @Html.LabelFor(model => model.Duration.Seconds,  htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left; width: 100px;" })
           <div class="col-md-10" style="width:100px;">
               @Html.EditorFor(model => model.Duration.Seconds, new { htmlAttributes = new { @class = "form-control", max = 60 } })
               @Html.ValidationMessageFor(model => model.Duration.Seconds, "", new { @class = "text-danger" })
           </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control timepicker" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfProduction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearOfProduction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearOfProduction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2"><b>Okładka:</b></p>
            <div class="col-md-10">
                <img id="CoverArtImg" src="" width="250px" />
            </div>
            <div>
                <input id="LoadNextImageBtn" value="Szukaj innego" type="button"/>
                @*@Html.HiddenFor(m => m.MyHiddenId, new { id = "ImageSearchOrderHidden" })*@
                <input id="ImageSearchOrderHidden"  type="hidden" value="1" />
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
